= Qualcomm Android Bootcamp =

== Day 1 ==

LECTURE: Android Overview::
Overview of Android, it's history, big picture of its stack, development tools.

DEMO: Status Activity Layout::
Create StatusActivity layout file, using Relative Layout. Add a button and an edit text.

LAB: Status Activity Layout::
Add EditText to Status Activity layout, setup its height, width, id, and hint.
Position it below the button, and have it take entire remaining screen space.


LECTURE: Android UI::
User Interface Events module.

DEMO: Implement onClickListener for the update button::
Add the Java binding to handle the update button. Use LogCat to print out the output to the log and verify the button works.


LAB: Handling UI Events::
. Add a `TextView` with id `text_count` to status activity.
. Add a `TextWatcher` listener to `textStatus` and update `textCount` as user types.
. Tell user how many characters are left, assuming we have 140 total.

EVIEW: Android UI::
Review questions for the User Interface module

DEMO: Adding the YambaClient jar to the project::
Demonstrate how to download and use a third party JAR file into the app project.

DEMO: Async Task::
Use `YambaClient` to post status update to the cloud. Show how it won't work on UI thread, creating the motivation for `AsyncTask`.

DEMO: Adding Internet permissions::
Explain the security model, and need for app to declare what permissions it wants to use.


HOMEWORK::
* Review _FastTrack to Java_ chapters on OOP and Packaging
* Watch http://mrkn.co/f/595[Eclipse Video]
* Read ahead on Fragments module (Fragments Module).

== Day 2 ==

REVIEW: Activities and Android UI Module

LAB: Add a Dialog while posting::
Hint: Use http://developer.android.com/reference/android/app/ProgressDialog.html[ProgressDialog]
Use AsyncTask's callbacks to start/stop the progress dialog.

REVIEW: Review questions for Activities and Android UI module.

LECTURE: ActionBar::
How Action Bar providers for app navigation: (Action_Bar Module)

LAB: Create Main activity::
Create activity that will be the main entry point into the app.

DEMO: Adding menu Status Update::
Add menu to jump to status activity.

LECTURE: Intents::
How intents work: (Intents Module)

LECTURE: Services::
Cover the Services module.

LAB: Add a Refresh menu item::
Add a _Refresh_ menu item to the action bar. Hint: use +ic_menu_rotate+ icon.

DEMO: RefreshService::
Build a service to pull the data from the cloud.

LECURE: Content Providers::
Module on CP

DEMO: Implement StatusProvider::
Build a DB-based content provider.


LECTURE: Fragments Overview::
What fragments are, why you'd care, and how to use them statically: (Fragments Module).

DEMO: Using fragments statically::
Convert the status activity to status activity + status fragment.

LAB: Use static fragments::
Create a main activity that would host both preference fragment as well as status fragment.

HOMEWORK: Read ahead on advanced fragments::
Topics on how to communicate from fragment to activity, how to use back stack, and similar.


== Parking Lot ==

* Testing
* Memory management
* Async IPC
* NDK/JNI
* Wifi stack
* Bluetooth stack
* Creating/extending framework
* Tools: debugger, tracing, performance

== Homework ==

* http://mrkn.co/f/595[Eclipse Video]